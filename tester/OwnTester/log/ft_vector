////////// TEST VECTOR //////////
  == default / fill / range / copy constructor test ==
size: 0
capacity: OK

Content is:
###############################################
size: 5
capacity: OK

Content is:
- 42
- 42
- 42
- 42
- 42
###############################################
size: 3
capacity: OK

Content is:
- 42
- 42
- 42
###############################################
size: 3
capacity: OK

Content is:
- 42
- 42
- 42
###############################################
  == assign operator test ==
size: 4
capacity: OK

Content is:
- 21
- 21
- 21
- 21
###############################################
size: 3
capacity: OK

Content is:
- 42
- 42
- 42
###############################################
  == begin / end / rbegin / rend test ==
size: 7
capacity: OK

Content is:
- 0
- 3
- 6
- 9
- 12
- 15
- 18
###############################################
size: 7
capacity: OK

Content is:
- 18
- 15
- 12
- 9
- 6
- 3
- 0
###############################################
  == size / resize / capacity test ==
capacity before resize: 10
size: 10
capacity: OK

Content is:
- 0
- 3
- 6
- 9
- 12
- 15
- 18
- 21
- 24
- 27
###############################################
resize to size 15
...
capacity after resize: 20
size: 15
capacity: OK
###############################################
  == reserve test ==
capacity before reserve: 0
size: 0
capacity: OK
###############################################
capacity after reserve: 7
size: 0
capacity: OK

Content is:
###############################################
  == [] / at / front / back test ==
size: 7
capacity: OK

Content is:
- 7
- 5
- 3
- 1
- -1
- -3
- -5
###############################################
size: 7
capacity: OK

Content is:
- 42
- 5
- 3
- 1
- -1
- -3
- 24
###############################################
at[0]: 42
at[5]: -3
front: 42
back: 24
  == assign test ==
size: 10
capacity: OK

Content is:
- 20
- 18
- 16
- 14
- 12
- 10
- 8
- 6
- 4
- 2
###############################################
size: 5
capacity: OK

Content is:
- 25
- 20
- 15
- 10
- 5
###############################################
  # after assign(): #
size: 5
capacity: OK

Content is:
- 25
- 20
- 15
- 10
- 5
###############################################
size: 2
capacity: OK

Content is:
- 42
- 42
###############################################
size: 10
capacity: OK

Content is:
- 20
- 18
- 16
- 14
- 12
- 10
- 8
- 6
- 4
- 2
###############################################
size: 4
capacity: OK

Content is:
- 21
- 21
- 21
- 21
###############################################
size: 6
capacity: OK

Content is:
- 42
- 42
- 42
- 42
- 42
- 42
###############################################
  # assign on enough capacity and low size: #
size: 5
capacity: OK

Content is:
- 53
- 53
- 53
- 53
- 53
###############################################
size: 3
capacity: OK

Content is:
- 20
- 18
- 16
###############################################
  == push & pop back test ==
PUSH 1
size: 1
capacity: 1
...
PUSH 2
size: 2
capacity: 2
...
PUSH 3
size: 3
capacity: 4
...
PUSH 4
size: 4
capacity: 4
...
PUSH 5
size: 5
capacity: 8
...
PUSH 6
size: 6
capacity: 8
...
DONE.

size: 6
capacity: OK

Content is:
- 0
- 3
- 2
- 1
- 0
- 3
###############################################
POP!
size: 5
capacity: OK

Content is:
- 0
- 3
- 2
- 1
- 0
###############################################
POP!
size: 4
capacity: OK

Content is:
- 0
- 3
- 2
- 1
###############################################
POP!
size: 3
capacity: OK

Content is:
- 0
- 3
- 2
###############################################
capacity: 8
  == insert / erase test ==
size: 0
capacity: OK

Content is:
###############################################
size: 1
capacity: OK

Content is:
- 42
###############################################
size: 4
capacity: OK

Content is:
- 21
- 21
- 21
- 42
###############################################
size: 8
capacity: OK

Content is:
- 21
- 2
- 3
- 4
- 5
- 21
- 21
- 42
###############################################
size: 7
capacity: OK

Content is:
- 21
- 2
- 4
- 5
- 21
- 21
- 42
###############################################
size: 5
capacity: OK

Content is:
- 21
- 2
- 4
- 5
- 21
###############################################
  == swap test ==
before swap: 
size: 5
capacity: OK

Content is:
- 1
- 2
- 3
- 4
- 5
###############################################
size: 3
capacity: OK

Content is:
- 2
- 4
- 6
###############################################
after swap: 
size: 3
capacity: OK

Content is:
- 2
- 4
- 6
###############################################
size: 5
capacity: OK

Content is:
- 1
- 2
- 3
- 4
- 5
###############################################
after non-member swap: 
size: 5
capacity: OK

Content is:
- 1
- 2
- 3
- 4
- 5
###############################################
size: 3
capacity: OK

Content is:
- 2
- 4
- 6
###############################################
  == clear test ==
before clear
size: 7
capacity: OK

Content is:
- 3
- 6
- 9
- 12
- 15
- 18
- 21
###############################################
after clear
size: 0
capacity: OK

Content is:
###############################################
  == relational operators test ==
size: 5
capacity: OK

Content is:
- 2
- 5
- 8
- 11
- 14
###############################################
size: 5
capacity: OK

Content is:
- 2
- 5
- 8
- 11
- 14
###############################################
operator ==
OK
operator !=
KO
operator <
KO
operator <=
OK
operator >
KO
operator >=
OK
